name: AWS Lambda GraalVM CE CD
on: [push, pull_request]

env:
  AWS_REGION: eu-central-1
  FUNCTION_NAME: aws-lambda-cli-maven-graalvm-test
  FUNCTION_TIMEOUT: 30
  FUNCTION_MEMORY: 256

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-maven-test-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-test-
      - name: Setup GraalVM CE
        uses: DeLaGuardo/setup-graalvm@3.1
        with:
          graalvm-version: 21.0.0.java11
      - name: Install Native Image
        run: gu install native-image
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ AWS_REGION }}
      - name: Build Application
        run: |
          ./mvnw package -Dpackaging=native-image --no-transfer-progress
      - name: Deploy to AWS Lambda
        env:
            AWS_ROLE_ARN: {{ secrets.AWS_ROLE_ARN }}
        run: |
          chmod 755 bootstrap target/aws-lambda-cli-maven-graalvm-test
          zip -j build/function.zip bootstrap target/aws-lambda-cli-maven-graalvm-test
          ZIP_PATH=build/function.zip
          if aws lambda get-function --function-name "${FUNCTION_NAME}" > /dev/null 2>&1; then
            aws lambda update-function-code \
              --function-name "${FUNCTION_NAME} \
              --zip-file fileb://${APP_PATH}
          else
            aws lambda create-function \
              --function-name "${FUNCTION_NAME} \
              --runtime provided \
              --zip-file fileb://${APP_PATH}
              --handler io.micronaut.function.aws.proxy.MicronautLambdaHandler \
              --role $AWS_ROLE_ARN
          fi
